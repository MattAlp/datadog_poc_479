buildscript {
	ext {
		PARENT_DIR = projectDir
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.graalvm.buildtools.native' version '0.10.2'
}

group = 'lab.m7.poc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	implementation "com.squareup.okhttp3:okhttp:4.10.0"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

graalvmNative {

	binaries.all {
		//debug = true
		verbose = true

		buildArgs.add("-g") // Malp added this for debug symbols
		buildArgs.add("-O0")

		// buildArgs.add("-Ob")
		// buildArgs.add("-H:+ReportExceptionStackTraces")
		// buildArgs.add("-H:+PrintClassInitialization")
		// buildArgs.add("-H:+PrintAnalysisCallTree")
		buildArgs.add("-H:+IncludeDebugHelperMethods")
		buildArgs.add("--enable-url-protocols=https")

		//datadog
		// buildArgs.add("-J-javaagent:$PARENT_DIR/devsecops/dd-java-agent.jar") // commented out for now to use the direct-from-main build
		buildArgs.add("-J-javaagent:$PARENT_DIR/devsecops/dd-java-agent-1.40.0-SNAPSHOT.jar")
		buildArgs.add("-J-XX:FlightRecorderOptions=stackdepth=256")
		buildArgs.add("-J-Ddd.profiling.enabled=true")
		buildArgs.add("-J-Ddd.profiling.directallocation.enabled=true")

		// run the binary with runtime AND this flag at some point
		// buildArgs.add("-J-Ddd.profiling.start-force-first=true") // added later
		// buildArgs.add("-Ddd.profiling.start-force-first=true")

		buildArgs.add("--enable-monitoring=jfr")
		buildArgs.add("--initialize-at-build-time=datadog.okhttp3.internal.platform.ConscryptPlatform")
		buildArgs.add("--initialize-at-build-time=datadog.trace.bootstrap.instrumentation.jfr.directallocation.DirectAllocationSampleEvent")

		buildArgs.add("--initialize-at-build-time=ch.qos.logback.classic")
		buildArgs.add("--initialize-at-build-time=ch.qos.logback.core.util")
		buildArgs.add("--initialize-at-build-time=ch.qos.logback.core")
		buildArgs.add("--initialize-at-build-time=org.apache.commons.logging.LogFactory")

		buildArgs.add("--initialize-at-run-time=io.grpc.netty.shaded.io.netty.handler.ssl")
		buildArgs.add("--initialize-at-run-time=io.grpc.netty.shaded.io.netty.internal.tcnative")

		buildArgs.add("--initialize-at-build-time=com.google.common.base")
		buildArgs.add("--initialize-at-build-time=com.google.common.io")
		buildArgs.add("--initialize-at-build-time=com.google.protobuf")
		buildArgs.add("--initialize-at-build-time=com.google.common.math")
		buildArgs.add("--initialize-at-build-time=com.google.gson")

		// buildArgs.add("-J-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005") // too late
		
	}
}